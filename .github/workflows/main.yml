name: Version Testing

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.filter.outputs.code }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Filter changes to only run build if code changes
      - name: Check for app code changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code:
              - 'angular-frontend/**'
              - 'springboot-backend/**'

  build:
    needs: check-changes
    if: needs.check-changes.outputs.code_changed == 'true'
    runs-on: ubuntu-latest
    environment: POC
    permissions:
      contents: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Get Git version from codacy/git-version
    - name: Git Version
      id: version
      uses: codacy/git-version@2.4.0
      with:
        release-branch: main
        dev-branch: dev
        prefix: 'crud-ngfe-'
        log-paths: |
          angular-frontend
          springboot-backend
          
    # Convert Git tag to Docker tag
    - name: Convert Git tag to Docker tag
      id: docker_tag
      run: |
        GIT_TAG="${{ steps.version.outputs.version }}"
        DOCKER_TAG="${GIT_TAG%-*}:${GIT_TAG##*-}"
        echo "Git Tag Version - $GIT_TAG"
        echo "Docker Tag Version - $DOCKER_TAG"
        echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT
      shell: bash

    - name: Log in to DigitalOcean Container Registry
      run: echo "${{ secrets.DO_API_TOKEN }}" | docker login registry.digitalocean.com -u "${{ secrets.DO_API_EMAIL }}" --password-stdin

    - name: Build Docker image
      run: |
        IMAGE=registry.digitalocean.com/poc-reg/${{ steps.docker_tag.outputs.docker_tag }}
        docker build -t $IMAGE ./angular-frontend/

    - name: Push Docker image
      run: |
        IMAGE=registry.digitalocean.com/poc-reg/${{ steps.docker_tag.outputs.docker_tag }}
        docker push $IMAGE

    # Tag and push in Git so that next run increments
    - name: Create and push new Git tag
      if: github.ref == 'refs/heads/main'
      run: |
        NEW_TAG="${{ steps.version.outputs.version }}"
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag "$NEW_TAG"
        git push origin "$NEW_TAG"
